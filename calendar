<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Monthly Calendar with Weekly & Monthly Totals</title>
<style>
    body {
        font-family: Arial, sans-serif;
        display: flex;
    }
    .sidebar {
        width: 150px;
        background: #f4f4f4;
        padding: 10px;
        height: 100vh;
    }
    .sidebar ul { list-style: none; padding: 0; }
    .sidebar li {
        padding: 10px;
        cursor: pointer;
        text-align: center;
        border-bottom: 1px solid #ccc;
    }
    .sidebar li:hover { background: #ddd; }
    .main-content { flex: 1; padding: 20px; }
    .calendar {
        display: grid;
        grid-template-columns: repeat(7, 1fr) 1in 1fr 1fr;
        gap: 10px;
        max-width: 1150px;
        align-items: stretch;
    }
    .day-header {
        font-weight: bold;
        text-align: center;
        padding: 10px;
        background: #f0f0f0;
    }
    .gap-header { background: transparent; }
    .day {
        border: 1px solid #ccc;
        cursor: pointer;
        min-height: 80px;
        position: relative;
        background: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        padding: 10px;
    }
    .day-number {
        position: absolute;
        top: 5px;
        left: 5px;
        font-size: 10px;
        font-weight: bold;
    }
    .note {
        font-size: 18px;
        font-weight: bold;
        color: black;
    }
    .trades {
        position: absolute;
        bottom: 2px;
        font-size: 10px;
        color: #333;
    }
    .total-box {
        border: 2px solid #000;
        padding: 10px;
        min-height: 80px;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #noteModal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        padding: 20px;
        border: 1px solid #ccc;
        box-shadow: 0 0 10px rgba(0,0,0,0.5);
        width: 300px;
    }
    #noteModal h3 {
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 10px;
    }
    #noteModal input {
        font-size: 16px;
        font-weight: bold;
        width: 100%;
        padding: 8px;
        margin-bottom: 8px;
        box-sizing: border-box;
    }
    .positive { background-color: lightgreen !important; }
    .negative { background-color: lightcoral !important; }
</style>
</head>
<body>
    <div class="sidebar">
        <ul>
            <li onclick="loadMonth(1)">January</li>
            <li onclick="loadMonth(2)">February</li>
            <li onclick="loadMonth(3)">March</li>
            <li onclick="loadMonth(4)">April</li>
            <li onclick="loadMonth(5)">May</li>
            <li onclick="loadMonth(6)">June</li>
            <li onclick="loadMonth(7)">July</li>
            <li onclick="loadMonth(8)">August</li>
            <li onclick="loadMonth(9)">September</li>
            <li onclick="loadMonth(10)">October</li>
            <li onclick="loadMonth(11)">November</li>
            <li onclick="loadMonth(12)">December</li>
        </ul>
    </div>
    <div class="main-content">
        <h1 id="month-title">Select a Month</h1>
        <div class="calendar" id="calendar"></div>
    </div>

    <!-- MODAL -->
    <div id="noteModal">
        <h3>Add Note</h3>
        <label>Amount:</label>
        <input type="number" id="amountInput" placeholder="Enter amount" /><br />
        <label>Number of Trades:</label>
        <input type="number" id="tradesInput" placeholder="Enter trades" /><br />
        <button onclick="saveNote()">Save</button>
        <button onclick="closeModal()">Cancel</button>
    </div>

<script>
const calendar = document.getElementById("calendar");
let selectedDay = null;
let selectedMonth = null;
const monthDays = {1:31, 2:28, 3:31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31};
const dayNames = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];

function loadMonth(month) {
    selectedMonth = month;
    const year = new Date().getFullYear();
    const firstDay = new Date(year, month - 1, 1).getDay();
    document.getElementById("month-title").textContent =
        new Date(year, month - 1).toLocaleString('default', { month: 'long' });
    calendar.innerHTML = "";
    let total = 0;
    let weekTotal = 0;
    let dayCounter = firstDay; // Start count including empty cells offset

    // HEADER
    dayNames.forEach(day => {
        const headerDiv = document.createElement("div");
        headerDiv.classList.add("day-header");
        headerDiv.textContent = day;
        calendar.appendChild(headerDiv);
    });
    const gapHeader = document.createElement("div");
    gapHeader.classList.add("gap-header");
    calendar.appendChild(gapHeader);

    const totalHeader = document.createElement("div");
    totalHeader.classList.add("day-header");
    totalHeader.textContent = "Week Total";
    calendar.appendChild(totalHeader);

    const monthHeader = document.createElement("div");
    monthHeader.classList.add("day-header");
    monthHeader.id = "monthTotalHeader";
    monthHeader.textContent = "Month Total: 0";
    calendar.appendChild(monthHeader);

    // Empty filler cells before first day
    for (let i = 0; i < firstDay; i++) {
        const emptyDiv = document.createElement("div");
        emptyDiv.classList.add("day");
        emptyDiv.style.visibility = "hidden";
        calendar.appendChild(emptyDiv);
    }

    // Days loop
    for (let dayNum = 1; dayNum <= monthDays[month]; dayNum++) {
        const dayDiv = document.createElement("div");
        dayDiv.classList.add("day");

        const dayNumSpan = document.createElement("span");
        dayNumSpan.classList.add("day-number");
        dayNumSpan.textContent = dayNum;
        dayDiv.appendChild(dayNumSpan);

        dayDiv.onclick = () => openModal(dayNum);

        const noteKey = `note_${month}_${dayNum}`;
        const savedData = JSON.parse(localStorage.getItem(noteKey) || "{}");

        if (savedData.amount) {
            const noteSpan = document.createElement("span");
            noteSpan.classList.add("note");
            noteSpan.textContent = savedData.amount;
            dayDiv.appendChild(noteSpan);

            const noteValue = parseFloat(savedData.amount);
            if (!isNaN(noteValue)) {
                weekTotal += noteValue;
                total += noteValue;
                if (noteValue > 0) dayDiv.classList.add("positive");
                else if (noteValue < 0) dayDiv.classList.add("negative");
            }
        }

        if (savedData.trades) {
            const tradesSpan = document.createElement("span");
            tradesSpan.classList.add("trades");
            tradesSpan.textContent = `Trades: ${savedData.trades}`;
            dayDiv.appendChild(tradesSpan);
        }

        calendar.appendChild(dayDiv);
        dayCounter++;

        // At the end of each week or month, insert totals
        if (dayCounter % 7 === 0 || dayNum === monthDays[month]) {
            // Fill any missing cells to complete last week
            if (dayCounter % 7 !== 0) {
                for (let e = dayCounter % 7; e < 7; e++) {
                    const emptyDiv = document.createElement("div");
                    emptyDiv.classList.add("day");
                    emptyDiv.style.visibility = "hidden";
                    calendar.appendChild(emptyDiv);
                    dayCounter++;
                }
            }

            // Gap column
            calendar.appendChild(document.createElement("div"));

            // Weekly total box
            const totalBox = document.createElement("div");
            totalBox.classList.add("total-box");
            totalBox.textContent = weekTotal;
            if (weekTotal > 0) totalBox.style.backgroundColor = "lightgreen";
            else if (weekTotal < 0) totalBox.style.backgroundColor = "lightcoral";
            else totalBox.style.backgroundColor = "#fafafa";
            calendar.appendChild(totalBox);

            // Empty placeholder for month total
            const emptyMonthCell = document.createElement("div");
            emptyMonthCell.style.background = "transparent";
            calendar.appendChild(emptyMonthCell);

            weekTotal = 0;
        }
    }

    // Update Month Total header
    const monthHeaderCell = document.getElementById("monthTotalHeader");
    monthHeaderCell.textContent = `Month Total: ${total}`;
    if (total > 0) monthHeaderCell.style.backgroundColor = "lightgreen";
    else if (total < 0) monthHeaderCell.style.backgroundColor = "lightcoral";
    else monthHeaderCell.style.backgroundColor = "#fafafa";
}

function openModal(day) {
    selectedDay = day;
    const savedData = JSON.parse(localStorage.getItem(`note_${selectedMonth}_${day}`) || "{}");
    document.getElementById("amountInput").value = savedData.amount || "";
    document.getElementById("tradesInput").value = savedData.trades || "";
    document.getElementById("noteModal").style.display = "block";
}

function saveNote() {
    const amount = document.getElementById("amountInput").value;
    const trades = document.getElementById("tradesInput").value;

    const data = { amount, trades };
    localStorage.setItem(`note_${selectedMonth}_${selectedDay}`, JSON.stringify(data));

    document.getElementById("noteModal").style.display = "none";
    loadMonth(selectedMonth);
}

function closeModal() {
    document.getElementById("noteModal").style.display = "none";
}
</script>
</body>
</html>
